openapi: 3.0.2

info:
  title: "Mailings"
  description: "Mailing management microservice API."
  version: "0.4.0"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  responses:
    Unauthorized:
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "Authentication credentials were not provided."
      description: "An authentication error has occurred."
    NotFound:
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: "Not found."
      description: "The requested resource does not exist."

security:
  - BearerAuth: []

paths:
  /api/clients:
    get:
      operationId: listClients
      description: "Lists all clients that are subscribed to a least one user mailing."
      summary: "List clients."
      tags:
        - Clients
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    bot:
                      type: string
                      maxLength: 50
                      example: "IRCpuc1mcsEMu9QkndPa"
                    chat:
                      type: string
                      maxLength: 50
                      example: "j719AM0A7a6z041Pj24S-123456789"
                    subscriptions:
                      type: array
                      items:
                        type: string
                      example:
                        [
                          "ef6c08ea-460e-4fe2-aa95-c53ddbe4ad8b",
                          "ca3ac034-0d28-4cf3-8401-b752ee7efc0c",
                          "abc79eef-9aa0-45e9-bbc9-a2c22942fd19",
                        ]
                  required:
                    - bot
                    - chat
          description: "Clients have been retrieved successfully."
        "401":
          $ref: "#/components/responses/Unauthorized"

    post:
      operationId: createClient
      description: "Creates a new client."
      summary: "Create a client."
      tags:
        - Clients
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bot:
                  type: string
                  maxLength: 50
                  example: "IRCpuc1mcsEMu9QkndPa"
                chat:
                  type: string
                  maxLength: 50
                  example: "j719AM0A7a6z041Pj24S-123456789"
                subscriptions:
                  type: array
                  items:
                    type: string
                  example:
                    [
                      "ef6c08ea-460e-4fe2-aa95-c53ddbe4ad8b",
                      "ca3ac034-0d28-4cf3-8401-b752ee7efc0c",
                      "abc79eef-9aa0-45e9-bbc9-a2c22942fd19",
                    ]
              required:
                - bot
                - chat
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  bot:
                    type: string
                    maxLength: 50
                  chat:
                    type: string
                    maxLength: 50
                  subscriptions:
                    type: array
                    items:
                      type: string
                required:
                  - bot
                  - chat
              examples:
                "New Client":
                  value:
                    id: "18629c5c-7b28-4e3f-8373-9fb4310d0a3c"
                    bot: "IRCpuc1mcsEMu9QkndPa"
                    chat: "j719AM0A7a6z041Pj24S-123456789"
                    subscriptions:
                      [
                        "ef6c08ea-460e-4fe2-aa95-c53ddbe4ad8b",
                        "ca3ac034-0d28-4cf3-8401-b752ee7efc0c",
                        "abc79eef-9aa0-45e9-bbc9-a2c22942fd19",
                      ]
          description: "The client has been created successfully."
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  bot:
                    type: array
                    items:
                      type: string
                  chat:
                    type: array
                    items:
                      type: string
                  subscriptions:
                    type: array
                    items:
                      type: string
                  nonFieldErrors:
                    type: array
                    items:
                      type: string
              examples:
                "Empty Field":
                  value:
                    bot: ["This field can not be blank."]
                "Null Field":
                  value:
                    chat: ["This field can not be null."]
                "Too Many Characters":
                  value:
                    bot: ["Ensure this field has no more than 50 characters."]
                "Non-existent ID":
                  value:
                    subscriptions:
                      [
                        'Invalid pk "ef6c08ea-460e-4fe2-aa95-c53ddbe4ad8b" - object does not exist.',
                      ]
                "Unique Constraint Violation":
                  value:
                    nonFieldErrors:
                      ["The fields bot, chat must make a unique set."]
          description: "The request is malformed."
        "401":
          $ref: "#/components/responses/Unauthorized"

  /api/clients/{id}:
    get:
      operationId: retrieveClient
      description: "Retrieves an existing client by ID."
      summary: "Retrieve a client."
      tags:
        - Clients
      parameters:
        - name: id
          in: path
          required: true
          description: "Client ID."
          schema:
            type: string
            format: uuid
            example: "18629c5c-7b28-4e3f-8373-9fb4310d0a3c"
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  bot:
                    type: string
                    maxLength: 50
                  chat:
                    type: string
                    maxLength: 50
                  subscriptions:
                    type: array
                    items:
                      type: string
                required:
                  - bot
                  - chat
              examples:
                "New Client":
                  value:
                    id: "18629c5c-7b28-4e3f-8373-9fb4310d0a3c"
                    bot: "IRCpuc1mcsEMu9QkndPa"
                    chat: "j719AM0A7a6z041Pj24S-123456789"
                    subscriptions:
                      [
                        "ef6c08ea-460e-4fe2-aa95-c53ddbe4ad8b",
                        "ca3ac034-0d28-4cf3-8401-b752ee7efc0c",
                        "abc79eef-9aa0-45e9-bbc9-a2c22942fd19",
                      ]
          description: "The client has been retrieved successfully."
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

    put:
      operationId: updateClient
      description: "Replaces existing client data. The client is being retrieved by an ID."
      summary: "Replace client data."
      tags:
        - Clients
      parameters:
        - name: id
          in: path
          required: true
          description: "Client ID."
          schema:
            type: string
            format: uuid
            example: "18629c5c-7b28-4e3f-8373-9fb4310d0a3c"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bot:
                  type: string
                  maxLength: 50
                  example: "uaumpME1IcP9RQsdnCck"
                chat:
                  type: string
                  maxLength: 50
                  example: "aA64Az0j7P071j19M42S-123456789"
                subscriptions:
                  type: array
                  items:
                    type: string
                  example:
                    [
                      "cb73f749-92c6-41d4-92c7-429946a37556",
                      "609c700d-8fd1-48d1-a9be-fb762a7d91ef",
                      "2370d17a-62a7-40fb-a338-6584e2f4b486",
                    ]
              required:
                - bot
                - chat
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                    example: "18629c5c-7b28-4e3f-8373-9fb4310d0a3c"
                  bot:
                    type: string
                    maxLength: 50
                    example: "uaumpME1IcP9RQsdnCck"
                  chat:
                    type: string
                    maxLength: 50
                    example: "aA64Az0j7P071j19M42S-123456789"
                  subscriptions:
                    type: array
                    items:
                      type: string
                    example:
                      [
                        "cb73f749-92c6-41d4-92c7-429946a37556",
                        "609c700d-8fd1-48d1-a9be-fb762a7d91ef",
                        "2370d17a-62a7-40fb-a338-6584e2f4b486",
                      ]
                required:
                  - bot
                  - chat
          description: "The client data have been updated successfully."
        "400":
          content:
            application/json:
              schema:
                type: object
                properties:
                  bot:
                    type: array
                    items:
                      type: string
                  chat:
                    type: array
                    items:
                      type: string
                  subscriptions:
                    type: array
                    items:
                      type: string
                  nonFieldErrors:
                    type: array
                    items:
                      type: string
              examples:
                "Empty Field":
                  value:
                    bot: ["This field can not be blank."]
                "Null Field":
                  value:
                    chat: ["This field can not be null."]
                "Too Many Characters":
                  value:
                    bot: ["Ensure this field has no more than 50 characters."]
                "Non-existent ID":
                  value:
                    subscriptions:
                      [
                        'Invalid pk "609c700d-8fd1-48d1-a9be-fb762a7d91ef" - object does not exist.',
                      ]
                "Unique Constraint Violation":
                  value:
                    nonFieldErrors:
                      ["The fields bot, chat must make a unique set."]
          description: "The request is malformed."
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      operationId: partial_updateClient
      description: ""
      tags:
        - Clients
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                bot:
                  type: string
                  maxLength: 50
                chat:
                  type: string
                  maxLength: 50
                subscriptions:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  bot:
                    type: string
                    maxLength: 50
                  chat:
                    type: string
                    maxLength: 50
                  subscriptions:
                    type: array
                    items:
                      type: string
                required:
                  - bot
                  - chat
          description: ""

    delete:
      operationId: destroyClient
      description: ""
      tags:
        - Clients
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""

  /api/mailings:
    get:
      operationId: listMailings
      description: ""
      tags:
        - Mailings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    name:
                      type: string
                      maxLength: 50
                    common:
                      type: boolean
                  required:
                    - name
          description: ""

    post:
      operationId: createMailing
      description: ""
      tags:
        - Mailings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 50
                common:
                  type: boolean
              required:
                - name
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

  /api/mailings/{id}:
    get:
      operationId: retrieveMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

    put:
      operationId: updateMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 50
                common:
                  type: boolean
              required:
                - name
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

    patch:
      operationId: partial_updateMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 50
                common:
                  type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

    delete:
      operationId: destroyMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""

  /api/updates:
    get:
      operationId: listUpdates
      description: ""
      tags:
        - Updates
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    mailing:
                      type: string
                    client:
                      type: string
                      nullable: true
                    time:
                      type: string
                    date:
                      type: string
                      format: date
                    repeat:
                      type: integer
                      nullable: true
                  required:
                    - mailing
                    - time
                    - date
          description: ""

    post:
      operationId: createUpdate
      description: ""
      tags:
        - Updates
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mailing:
                  type: string
                client:
                  type: string
                  nullable: true
                time:
                  type: string
                date:
                  type: string
                  format: date
                repeat:
                  type: integer
                  nullable: true
              required:
                - mailing
                - time
                - date
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  mailing:
                    type: string
                  client:
                    type: string
                    nullable: true
                  time:
                    type: string
                  date:
                    type: string
                    format: date
                  repeat:
                    type: integer
                    nullable: true
                required:
                  - mailing
                  - time
                  - date
          description: ""

  /api/updates/{id}:
    get:
      operationId: retrieveUpdate
      description: ""
      tags:
        - Updates
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  mailing:
                    type: string
                  client:
                    type: string
                    nullable: true
                  time:
                    type: string
                  date:
                    type: string
                    format: date
                  repeat:
                    type: integer
                    nullable: true
                required:
                  - mailing
                  - time
                  - date
          description: ""

    delete:
      operationId: destroyUpdate
      description: ""
      tags:
        - Updates
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""

  /api/users:
    post:
      operationId: createUser
      description: ""
      tags:
        - Users
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 254
                first_name:
                  type: string
                  maxLength: 30
                last_name:
                  type: string
                  maxLength: 30
                password:
                  type: string
                  writeOnly: true
                  maxLength: 128
              required:
                - email
                - password
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  email:
                    type: string
                    format: email
                    maxLength: 254
                  first_name:
                    type: string
                    maxLength: 30
                  last_name:
                    type: string
                    maxLength: 30
                  date_joined:
                    type: string
                    format: date-time
                    readOnly: true
                  is_active:
                    type: boolean
                    readOnly: true
                  is_staff:
                    type: boolean
                    readOnly: true
                required:
                  - email
          description: ""
