openapi: 3.0.3

info:
  title: Mailings
  description: Mailing management microservice API.
  version: 0.4.0

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  responses:
    Unauthorized:
      description: An authentication error has occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Authentication credentials were not provided.
            additionalProperties: false

    NotFound:
      description: The requested resource does not exist.
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Not found.
            additionalProperties: false

    UnexpectedError:
      description: An unexpected error has occurred.
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Something went wrong.
            additionalProperties: false

  schemas:
    UUID:
      type: string
      format: uuid
      maxLength: 32
      readOnly: true
      pattern: "([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}){1}"
      example: 47756b51-aa4e-4c47-8e14-815cc73165f5

    Client:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/UUID"
        bot:
          type: string
          maxLength: 50
          pattern: "[A-Za-z0-9]+"
        chat:
          type: string
          maxLength: 50
          pattern: "[A-Za-z0-9]+"
        subscriptions:
          type: array
          items:
            $ref: "#/components/schemas/UUID"
          maxItems: 100
      additionalProperties: false
      required:
        - bot
        - chat

    Client.Error:
      type: object
      properties:
        bot:
          type: array
          items:
            type: string
        chat:
          type: array
          items:
            type: string
        subscriptions:
          type: array
          items:
            type: string
        nonFieldErrors:
          type: array
          items:
            type: string
      additionalProperties: false

  parameters:
    Client.ID:
      name: id
      in: path
      required: true
      description: Client ID.
      schema:
        $ref: "#/components/schemas/UUID"

  examples:
    Client.Create:
      value:
        bot: IRCpuc1mcsEMu9QkndPa
        chat: j719AM0A7a6z041Pj24S-123456789
        subscriptions:
          [
            ae5c9235-3685-4fbc-bca3-55e11a43be9e,
            c9fe773e-e71a-4cc5-abae-2ede2222554c,
            700f7618-7ffb-48e6-b921-74e7822d6274,
          ]
    Client.Read:
      value:
        id: 47756b51-aa4e-4c47-8e14-815cc73165f5
        bot: IRCpuc1mcsEMu9QkndPa
        chat: j719AM0A7a6z041Pj24S-123456789
        subscriptions:
          [
            ae5c9235-3685-4fbc-bca3-55e11a43be9e,
            c9fe773e-e71a-4cc5-abae-2ede2222554c,
            700f7618-7ffb-48e6-b921-74e7822d6274,
          ]
    Client.Update:
      value:
        bot: sc1Eunm9kPRpaQCIducM
        chat: 72A0jS6z40711jAM94aP-987654321
        subscriptions:
          [
            c161dd8a-b9e6-43a1-84a3-04dacb917f3c,
            8b3afaba-f1ee-4d47-8f40-bc93f886e3ce,
            dd545e4c-409e-41b1-96d2-4b02d3804a95,
          ]
    Client.AfterUpdate:
      value:
        id: 47756b51-aa4e-4c47-8e14-815cc73165f5
        bot: sc1Eunm9kPRpaQCIducM
        chat: 72A0jS6z40711jAM94aP-987654321
        subscriptions:
          [
            c161dd8a-b9e6-43a1-84a3-04dacb917f3c,
            8b3afaba-f1ee-4d47-8f40-bc93f886e3ce,
            dd545e4c-409e-41b1-96d2-4b02d3804a95,
          ]
    Client.Error.BlankField:
      value:
        bot: [This field can not be blank.]
    Client.Error.NullField:
      value:
        chat: [This field can not be null.]
    Client.Error.TooManyCharacters:
      value:
        bot: [Ensure this field has no more than 50 characters.]
    Client.Error.NonExistentID:
      value:
        subscriptions:
          [
            Invalid pk \"ef6c08ea-460e-4fe2-aa95-c53ddbe4ad8b\" - object does not exist.,
          ]
    Client.Error.UniqueConstraintViolation:
      value:
        nonFieldErrors: ["The fields bot, chat must make a unique set."]
    Client.Error.SubscriptionsLimitExceeded:
      value:
        subscriptions:
          [The number of provided subscriptions exceeds the limit of 100 items.]

paths:
  /api/clients:
    get:
      operationId: listClients
      description: Lists all clients that are subscribed to a least one user mailing.
      summary: List Client.
      tags:
        - Clients
      responses:
        200:
          description: Clients have been retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Client"
              examples:
                "Client Data":
                  $ref: "#/components/examples/Client.Read"
        401:
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/UnexpectedError"

    post:
      operationId: createClient
      description: Creates a new client.
      summary: Create a client.
      tags:
        - Clients
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
            examples:
              "Client Data":
                $ref: "#/components/examples/Client.Create"
      responses:
        201:
          description: The client has been created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
              examples:
                "New Client":
                  $ref: "#/components/examples/Client.Read"
        400:
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client.Error"
              examples:
                "Empty Field":
                  $ref: "#/components/examples/Client.Error.BlankField"
                "Null Field":
                  $ref: "#/components/examples/Client.Error.NullField"
                "Too Many Characters":
                  $ref: "#/components/examples/Client.Error.TooManyCharacters"
                "Non-existent ID":
                  $ref: "#/components/examples/Client.Error.NonExistentID"
                "Unique Constraint Violation":
                  $ref: "#/components/examples/Client.Error.UniqueConstraintViolation"
                "Subscriptions Limit Exceeded":
                  $ref: "#/components/examples/Client.Error.SubscriptionsLimitExceeded"
        401:
          $ref: "#/components/responses/Unauthorized"
        default:
          $ref: "#/components/responses/UnexpectedError"

  /api/clients/{id}:
    get:
      operationId: retrieveClient
      description: Retrieves an existing client by ID.
      summary: Retrieve a client.
      tags:
        - Clients
      parameters:
        - $ref: "#/components/parameters/Client.ID"
      responses:
        200:
          description: The client has been retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
              examples:
                "New Client":
                  $ref: "#/components/examples/Client.Read"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"

    put:
      operationId: updateClient
      description: Replaces existing client data. The client is being retrieved by an ID.
      summary: Replace client data.
      tags:
        - Clients
      parameters:
        - $ref: "#/components/parameters/Client.ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
            examples:
              "New Client Data":
                $ref: "#/components/examples/Client.Update"
      responses:
        200:
          description: The client data has been replaced successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
              examples:
                "Updated Client Data":
                  $ref: "#/components/examples/Client.AfterUpdate"
        400:
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client.Error"
              examples:
                "Empty Field":
                  $ref: "#/components/examples/Client.Error.BlankField"
                "Null Field":
                  $ref: "#/components/examples/Client.Error.NullField"
                "Too Many Characters":
                  $ref: "#/components/examples/Client.Error.TooManyCharacters"
                "Non-existent ID":
                  $ref: "#/components/examples/Client.Error.NonExistentID"
                "Unique Constraint Violation":
                  $ref: "#/components/examples/Client.Error.UniqueConstraintViolation"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"

    patch:
      operationId: partial_updateClient
      description: Updates existing client data. The client is being retrieved by an ID.
      summary: Update client data.
      tags:
        - Clients
      parameters:
        - $ref: "#/components/parameters/Client.ID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Client"
            examples:
              "Updated Client Data":
                $ref: "#/components/examples/Client.Update"
      responses:
        200:
          description: The client data has been updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client"
              examples:
                "Updated Client Data":
                  $ref: "#/components/examples/Client.AfterUpdate"
        400:
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Client.Error"
              examples:
                "Empty Field":
                  $ref: "#/components/examples/Client.Error.BlankField"
                "Null Field":
                  $ref: "#/components/examples/Client.Error.NullField"
                "Too Many Characters":
                  $ref: "#/components/examples/Client.Error.TooManyCharacters"
                "Non-existent ID":
                  $ref: "#/components/examples/Client.Error.NonExistentID"
                "Unique Constraint Violation":
                  $ref: "#/components/examples/Client.Error.UniqueConstraintViolation"
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"

    delete:
      operationId: destroyClient
      description: Deletes an existing client. The client is identified by an ID.
      summary: Delete a client.
      tags:
        - Clients
      parameters:
        - $ref: "#/components/parameters/Client.ID"
      responses:
        204:
          description: The client has been deleted successfully.
        401:
          $ref: "#/components/responses/Unauthorized"
        404:
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"

  /api/mailings:
    get:
      operationId: listMailings
      description: ""
      tags:
        - Mailings
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    name:
                      type: string
                      maxLength: 50
                    common:
                      type: boolean
                  required:
                    - name
          description: ""

    post:
      operationId: createMailing
      description: ""
      tags:
        - Mailings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 50
                common:
                  type: boolean
              required:
                - name
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

  /api/mailings/{id}:
    get:
      operationId: retrieveMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

    put:
      operationId: updateMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 50
                common:
                  type: boolean
              required:
                - name
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

    patch:
      operationId: partial_updateMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  maxLength: 50
                common:
                  type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  name:
                    type: string
                    maxLength: 50
                  common:
                    type: boolean
                required:
                  - name
          description: ""

    delete:
      operationId: destroyMailing
      description: ""
      tags:
        - Mailings
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""

  /api/updates:
    get:
      operationId: listUpdates
      description: ""
      tags:
        - Updates
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: string
                      format: uuid
                      readOnly: true
                    mailing:
                      type: string
                    client:
                      type: string
                      nullable: true
                    time:
                      type: string
                    date:
                      type: string
                      format: date
                    repeat:
                      type: integer
                      nullable: true
                  required:
                    - mailing
                    - time
                    - date
          description: ""

    post:
      operationId: createUpdate
      description: ""
      tags:
        - Updates
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                mailing:
                  type: string
                client:
                  type: string
                  nullable: true
                time:
                  type: string
                date:
                  type: string
                  format: date
                repeat:
                  type: integer
                  nullable: true
              required:
                - mailing
                - time
                - date
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  mailing:
                    type: string
                  client:
                    type: string
                    nullable: true
                  time:
                    type: string
                  date:
                    type: string
                    format: date
                  repeat:
                    type: integer
                    nullable: true
                required:
                  - mailing
                  - time
                  - date
          description: ""

  /api/updates/{id}:
    get:
      operationId: retrieveUpdate
      description: ""
      tags:
        - Updates
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  mailing:
                    type: string
                  client:
                    type: string
                    nullable: true
                  time:
                    type: string
                  date:
                    type: string
                    format: date
                  repeat:
                    type: integer
                    nullable: true
                required:
                  - mailing
                  - time
                  - date
          description: ""

    delete:
      operationId: destroyUpdate
      description: ""
      tags:
        - Updates
      parameters:
        - name: id
          in: path
          required: true
          description: ""
          schema:
            type: string
      responses:
        "204":
          description: ""

  /api/users:
    post:
      operationId: createUser
      description: ""
      tags:
        - Users
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  format: email
                  maxLength: 254
                first_name:
                  type: string
                  maxLength: 30
                last_name:
                  type: string
                  maxLength: 30
                password:
                  type: string
                  writeOnly: true
                  maxLength: 128
              required:
                - email
                - password
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: string
                    format: uuid
                    readOnly: true
                  email:
                    type: string
                    format: email
                    maxLength: 254
                  first_name:
                    type: string
                    maxLength: 30
                  last_name:
                    type: string
                    maxLength: 30
                  date_joined:
                    type: string
                    format: date-time
                    readOnly: true
                  is_active:
                    type: boolean
                    readOnly: true
                  is_staff:
                    type: boolean
                    readOnly: true
                required:
                  - email
          description: ""
